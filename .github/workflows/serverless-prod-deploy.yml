name: (DEV) Deploy to AWS

env:
  WORKING_DIRECTORY: "serverless-availability-api"
  PACKAGE_LOCK_DIRECTORY: "serverless-availability-api/package-lock.json"
  REPOSITORY: "TopVakantiehuizen/serverless-functions"

on:
  push:
    branches: [ 'main' ]

  pull_request:
    types: [opened]
#     paths: 
#       - '$WORKING_DIRECTORY/**'

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Notify about starting this deployment 
        if: github.event_name == 'pull_request'
        uses: hasura/comment-progress@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ env.REPOSITORY }}
          number: ${{ github.event.number }}
          id: deploy-production
          message: 'Starting deployment of this pull request.'

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: ${{ env.PACKAGE_LOCK_DIRECTORY }}

      - name: Install dependencies
        run: npm ci

      - name: Deploy service to [PRODUCTION] AWS
        if: "${{ github.event.inputs.stage == '' }}"
        uses: mathiasvr/command-output@v1
        id: deployment_prod
        with:
          run: |
            cd serverless-availability-api && npx serverless config credentials \
            --provider aws \
            --key ${{ secrets.AWS_ACCESS_KEY_ID }} \
            --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }} \

            npx serverless deploy \
            --stage prod

      - name: Notify about the successfull deployment
        if: steps.deployment_prod.outputs.stdout && github.event_name == 'pull_request'
        uses: hasura/comment-progress@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ env.REPOSITORY }}
          number: ${{ github.event.number }}
          id: deploy-production
          message: ${{ steps.deployment_prod.outputs.stdout }}
          append: true

      - name: Notify about the failed deployment
        if: github.event_name == 'pull_request' && ${{ steps.cmd.outputs.stderr }}
        uses: hasura/comment-progress@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ env.REPOSITORY }}
          number: ${{ github.event.number }}
          id: deploy-production
          message: ${{ steps.cmd.outputs.stderr }}
          append: true
