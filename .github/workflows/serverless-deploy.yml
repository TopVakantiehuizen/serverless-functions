name: Serverless deploy Service

env:
  WORKING_DIRECTORY: "serverless-availability-api"
  PACKAGE_LOCK_DIRECTORY: "serverless-availability-api/package-lock.json"
  REPOSITORY: 'TopVakantiehuizen/serverless-functions'

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'Environment stage'
        required: true
        default: 'dev'

  pull_request:
    types: [opened]
#     paths: 
#       - '$WORKING_DIRECTORY/**'

jobs:
  deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        # can be a dynamic path, so we can reuse this workflow for multiple serverless functions
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Notify about starting this deployment 
        uses: hasura/comment-progress@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ env.REPOSITORY }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: 'Starting deployment of this pull request.'

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: ${{ env.PACKAGE_LOCK_DIRECTORY }}

      - name: Install dependencies
        run: npm ci

      - name: Deploy service to [STAGING] AWS
        if: "${{ github.event.inputs.stage == '' }}"
        uses: mathiasvr/command-output@v1
        id: deployment_dev
        with:
          run: |
            ls \
            pwd \
          
            npx serverless config credentials \
            --provider aws \
            --key ${{ secrets.AWS_ACCESS_KEY_ID }} \
            --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            
            ls \
            pwd \

            npx serverless deploy \
            --stage dev

      - name: Deploy service to [MANUAL] AWS
        if: "${{ github.event.inputs.stage != '' }}"
        uses: mathiasvr/command-output@v1
        id: deployment_manual
        with:
          run: |
            npx serverless config credentials \
            --provider aws \
            --key ${{ secrets.AWS_ACCESS_KEY_ID }} \
            --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }} \

            npx serverless deploy \
            --stage ${{ github.event.inputs.stage }}

      - run: echo Command succeeded
        if: ${{ steps.deployment_dev.outputs.stdout }}

      - run: echo Command failed
        if: ${{ steps.cmd.outputs.stderr }}

      - name: Notify about the result of this deployment 
        if: ${{ steps.deployment_dev.outputs.stdout }}
        uses: hasura/comment-progress@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ env.REPOSITORY }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: ${{ steps.deployment_dev.outputs.stdout }} 
          append: true


      - name: Notify about the result of this deployment 
        if: ${{ steps.deployment_manual.outputs.stdout }}
        uses: hasura/comment-progress@v2.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ env.REPOSITORY }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: ${{ steps.deployment_manual.outputs.stdout }} 
          append: true
